{"version":3,"file":"static/js/382.2a0e1317.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","HOC/WithAuthRedirect.jsx","components/contactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/filter/Filter.module.css?e85f","components/filter/Filter.jsx","components/contactItems/ContactItems.styled.jsx","components/contactItems/ContactItems.jsx","components/contactList/ContactList.styled.jsx","components/contactList/ContactList.jsx","pages/ContactsPage.jsx","styles/Form.styled.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contactData.contacts;\nexport const selectContactStatus = state => state.contactData.status;\nexport const selectContactError = state => state.contactData.error;\nexport const selectFilter = state => state.contactData.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().trim().includes(filter.toLowerCase())\n    );\n  }\n);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { selectIsLoggedIn } from 'redux/auth/selectors';\n\nfunction WithAuthRedirect(Component, navigateTo) {\n  const ComponentWithRedirect = props => {\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n\n    return isLoggedIn ? <Component {...props} /> : <Navigate to={navigateTo} />;\n  };\n\n  return ComponentWithRedirect;\n}\n\nexport default WithAuthRedirect;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContactRequest } from 'redux/contacts/operations';\nimport { toast } from 'react-toastify';\n\nimport { Input, Label } from 'styles/Form.styled';\nimport { Button } from 'styles/Button.styled';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  function handleChange({ currentTarget: { name, value } }) {\n    if (name === 'name') setName(value);\n    if (name === 'number') setNumber(value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const isExistContact = contacts.some(\n      contact => contact.name.toLowerCase().trim() === name.toLowerCase().trim()\n    );\n\n    if (isExistContact) {\n      toast.warning(`Contact ${name} is already exists!`);\n      return;\n    }\n\n    dispatch(addContactRequest({ name: name.trim(), number }));\n    toast.success(`Contact ${name} successful existed!`);\n\n    reset();\n  }\n\n  function reset() {\n    setName('');\n    setNumber('');\n  }\n  const nameId = nanoid();\n  const numberId = nanoid();\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Label htmlFor={nameId}>Name</Label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        id={nameId}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        value={name}\n        onChange={handleChange}\n        required\n      />\n      <Label htmlFor={numberId} className=\"form-label\">\n        Number\n      </Label>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        id={numberId}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,2}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        value={number}\n        onChange={handleChange}\n        required\n      />\n\n      <Button type=\"submit\" className=\"formBtn\">\n        Add Contact\n      </Button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__z+x9X\",\"filterTitle\":\"Filter_filterTitle__0oZCH\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { handleFilter } from 'redux/contacts/contactsSlice';\nimport css from './Filter.module.css';\nimport { Input } from 'styles/Form.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  function onChangeFilter({ target: { value } }) {\n    dispatch(handleFilter(value));\n  }\n\n  return (\n    <div className={css.filter}>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        className=\"form-control\"\n        placeholder=\"Find contacts by name\"\n        value={filter}\n        onChange={onChangeFilter}\n      />\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport { ImPhone } from 'react-icons/im';\n\nexport const StyledIconItem = styled(ImPhone)`\n  fill: #0d6efd;\n`;\n\nexport const NameNumberWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContactRequest } from 'redux/contacts/operations';\n\nimport { toast } from 'react-toastify';\nimport { Button } from 'styles/Button.styled';\nimport { NameNumberWrapper, StyledIconItem } from './ContactItems.styled';\n\nexport const ContactItems = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  let formattedPhone = number.replace(/(\\d{3})(\\d{3})(\\d{4})/, '$1-$2-$3');\n\n  const handleDelete = id => {\n    dispatch(deleteContactRequest(id));\n    toast.success(`Contact ${name} successful deleted!`);\n  };\n\n  return (\n    <>\n      <NameNumberWrapper>\n        <StyledIconItem />\n        <span>{name}:</span>\n        <span>{formattedPhone}</span>\n      </NameNumberWrapper>\n      <Button\n        type=\"button\"\n        className=\"btn btn-outline-primary btn-sm\"\n        onClick={() => handleDelete(id)}\n      >\n        Delete\n      </Button>\n    </>\n  );\n};\n\nContactItems.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StyledItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 5px;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { ContactItems } from 'components/contactItems/ContactItems';\nimport { StyledItem } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  return (\n    <ul>\n      {filteredContacts.map(({ id, name, number }) => (\n        <StyledItem key={id}>\n          <ContactItems id={id} name={name} number={number} />\n        </StyledItem>\n      ))}\n    </ul>\n  );\n};\n","import { toast } from 'react-toastify';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/auth/selectors';\nimport { getContactsRequest } from 'redux/contacts/operations';\nimport {\n  selectContactError,\n  selectContacts,\n  selectContactStatus,\n} from 'redux/contacts/selectors';\nimport WithAuthRedirect from 'HOC/WithAuthRedirect';\n\nimport Loader from 'components/loader/Loader';\nimport { ContactForm } from 'components/contactForm/ContactForm';\nimport { Filter } from 'components/filter/Filter';\nimport { ContactList } from 'components/contactList/ContactList';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const contacts = useSelector(selectContacts);\n  const status = useSelector(selectContactStatus);\n  const error = useSelector(selectContactError);\n\n  useEffect(() => {\n    if (!isLoggedIn) return;\n\n    dispatch(getContactsRequest());\n  }, [dispatch, isLoggedIn]);\n\n  useEffect(() => {\n    if (error) {\n      toast.error('Sorry, something went wrong');\n    }\n  }, [error]);\n  return (\n    <>\n      {status === 'pending' && <Loader />}\n\n      <section className=\"section\">\n        <div className=\"container\">\n          <h1 className=\"title\">Add your contacts</h1>\n          <ContactForm />\n        </div>\n      </section>\n\n      <section className=\"section\">\n        <div className=\"container\">\n          <h2 className=\"title\">Contacts</h2>\n\n          {!error && contacts?.length ? (\n            <>\n              <Filter />\n              <ContactList />\n            </>\n          ) : (\n            <>\n              <p>You still haven't any contacts</p>\n            </>\n          )}\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default WithAuthRedirect(ContactsPage, '/login');\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 0.5rem;\n`;\n\nexport const Input = styled.input`\n  display: block;\n\n  width: 100%;\n  margin-bottom: 1rem;\n  padding: 0.375rem 0.75rem;\n\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n\n  color: #212529;\n\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid #dee2e6;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  border-radius: 0.375rem;\n\n  &:hover,\n  &:focus {\n    color: #212529;\n    background-color: #fff;\n    outline: transparent;\n    border-color: #86b7fe;\n    box-shadow: 0 0 0 0.25rem rgb(13 110 253 / 25%);\n  }\n`;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contactData","contacts","selectContactStatus","status","selectContactError","error","selectFilter","filter","selectFilteredContacts","toLowerCase","trim","includes","Component","navigateTo","props","useSelector","selectIsLoggedIn","to","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","handleChange","currentTarget","nameId","nanoid","numberId","onSubmit","e","preventDefault","some","contact","toast","addContactRequest","htmlFor","I","type","id","pattern","title","onChange","required","className","Filter","css","placeholder","target","handleFilter","StyledIconItem","styled","ImPhone","NameNumberWrapper","ContactItems","formattedPhone","replace","onClick","deleteContactRequest","handleDelete","StyledItem","ContactList","filteredContacts","WithAuthRedirect","isLoggedIn","useEffect","getContactsRequest","Loader","Label","Input"],"sourceRoot":""}